name: build

on:
  push:
    branches:
      - '**'
    paths:
      - .github/workflows/build.yml
      - examples/
      - thepipelinetool/**
      - thepipelinetool_core/**
      - thepipelinetool_operators/**
      - thepipelinetool_proc_macro/**
      - thepipelinetool_runner/**
      - thepipelinetool_server/**
      - thepipelinetool_task/**
      - thepipelinetool_utils/**
      - Cargo.toml
      - server.Dockerfile
      - worker.Dockerfile
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build
      - run: pwd

      - run: rustup target add x86_64-unknown-linux-musl
      - run: mkdir x86_64-unknown-linux-musl
      - run: cargo install --path thepipelinetool --target x86_64-unknown-linux-musl --root x86_64-unknown-linux-musl

      - run: rustup target add aarch64-apple-darwin
      - run: mkdir aarch64-apple-darwin
      - run: cargo install --path thepipelinetool --target aarch64-apple-darwin --root aarch64-apple-darwin

  server_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # - name: Log in to the Container registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: server.Dockerfile
          push: false
          # build-args: |
          #   VERSION=${{ steps.get_version.outputs.tag }}
          platforms: linux/amd64
          tags: ghcr.io/thepipelinetool/server:latest
          # cache-from: type=registry,ref=ghcr.io/thepipelinetool/server:buildcache
          # cache-to: type=registry,ref=ghcr.io/thepipelinetool/server:buildcache,mode=max
  worker_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # - name: Log in to the Container registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: worker.Dockerfile
          push: false
          # build-args: |
          #   VERSION=${{ steps.get_version.outputs.tag }}
          platforms: linux/amd64
          tags: ghcr.io/thepipelinetool/worker:latest
          # cache-from: type=registry,ref=ghcr.io/thepipelinetool/worker:buildcache
          # cache-to: type=registry,ref=ghcr.io/thepipelinetool/worker:buildcache,mode=max      